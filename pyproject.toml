[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"


[tool.setuptools.packages.find]
exclude = [
    "dev*",
    "docs*",
    "tests*",
    "examples*",
    "experiments*",
    "benchmark*",
    "build*",
    "dist*",
    "brainevent.egg-info*",
    "brainevent/__pycache__*",
    "brainevent/__init__.py"
]

[tool.setuptools.dynamic]
version = {attr = "brainevent.__version__"}


[tool.distutils.bdist_wheel]
universal = true


[project]
name = "brainevent"
description = "Event-driven Computation in JAX for Brain Dynamics."
readme = 'README.md'
license = { text = 'Apache-2.0 license' }
requires-python = '>=3.10'
authors = [{ name = 'BrainEvent Developers', email = 'chao.brain@qq.com' }]
dynamic = ["version"]
classifiers = [
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: Apache Software License',
    'Topic :: Scientific/Engineering :: Bio-Informatics',
    'Topic :: Scientific/Engineering :: Mathematics',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
    'Topic :: Software Development :: Libraries',
]

keywords = [
    'computational neuroscience',
    'brain-inspired computation',
    'brain dynamics programming',
]

dependencies = [
    'numpy>=1.15',
    'brainunit>=0.0.8',
    'absl-py',
]

[project.urls]
homepage = 'https://github.com/chaobrain/brainevent'
repository = 'https://github.com/chaobrain/brainevent'
"Bug Tracker" = 'https://github.com/chaobrain/brainevent/issues'
"Documentation" = 'https://brainevent.readthedocs.io/'
"Source Code" = 'https://github.com/chaobrain/brainevent'

[project.optional-dependencies]
cpu = [
    'jax[cpu]',
    'numba',
    'brainunit',
]
cuda12 = [
    'jax[cuda12]',
    'warp-lang',
    'brainunit',
]
cuda13 = [
    'jax[cuda13]',
    'warp-lang',
    'brainunit',
]
tpu = [
    'jax[tpu]',
    'brainunit',
]
testing = [
    'pytest',
]
